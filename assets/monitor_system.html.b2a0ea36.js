import{_ as i,r as c,o as l,c as u,b as n,d as a,w as p,e as s,a as e}from"./app.be83db55.js";const r={},k=n("h1",{id:"\u524D\u7AEF\u5F02\u5E38\u76D1\u6D4B\u7CFB\u7EDF\u642D\u5EFA",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u524D\u7AEF\u5F02\u5E38\u76D1\u6D4B\u7CFB\u7EDF\u642D\u5EFA","aria-hidden":"true"},"#"),s(" \u524D\u7AEF\u5F02\u5E38\u76D1\u6D4B\u7CFB\u7EDF\u642D\u5EFA")],-1),d=n("p",null,[n("img",{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7f8505d69ca044dca5cb05ed52b1e3e3~tplv-k3u1fbpfcp-watermark.image",alt:""})],-1),v={class:"table-of-contents"},m=s("\u9519\u8BEF\u6536\u96C6"),b=s("js \u5F02\u5E38"),g=s("Vue \u9519\u8BEF\u76D1\u542C"),h=s("React \u9519\u8BEF\u76D1\u542C"),f=s("\u9519\u8BEF\u4E0A\u62A5"),y=s("\u4E0A\u62A5\u65B9\u5F0F"),w=s("\u9519\u8BEF\u6536\u96C6 sdk"),x=s("\u670D\u52A1\u7AEF\u6536\u96C6"),_=s("\u63A5\u6536\u65E5\u5FD7\u5E76\u8BB0\u5F55\u5230\u65E5\u5FD7\u4E2D"),j=s("sourcemap \u65E5\u5FD7\u5206\u6790"),S=s("\u601D\u8DEF"),q=s("sourcemap \u6587\u4EF6\u4E0A\u62A5"),P=s("\u670D\u52A1\u7AEF\u6DFB\u52A0\u4E0A\u4F20\u63A5\u53E3"),N=s("sourcemap \u89E3\u6790"),M=s("\u603B\u7ED3"),F=s("TodoList"),T=e(`<h2 id="\u9519\u8BEF\u6536\u96C6" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u6536\u96C6" aria-hidden="true">#</a> \u9519\u8BEF\u6536\u96C6</h2><h3 id="js-\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#js-\u5F02\u5E38" aria-hidden="true">#</a> js \u5F02\u5E38</h3><p>js \u5F02\u5E38\u7684\u7279\u70B9\uFF1A \u51FA\u73B0\u4E0D\u4F1A\u5BFC\u81F4\u5D29\u6E83\uFF0C\u53EA\u4F1A\u7EC8\u6B62\u5F53\u524D\u6267\u884C\u7684\u4EFB\u52A1\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1 -&gt; begin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        error
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1 -&gt; begin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2 -&gt; begin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;2 -&gt; begin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="try-catch-\u6536\u96C6" tabindex="-1"><a class="header-anchor" href="#try-catch-\u6536\u96C6" aria-hidden="true">#</a> try-catch \u6536\u96C6</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1 -&gt; begin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            error
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1 -&gt; begin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u542B\u6709\u6808\u9519\u8BEF\u6536\u96C6</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1 -&gt; begin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        error
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1 -&gt; begin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
            <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>try-catch\u548C\u5F02\u6B65</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1 -&gt; begin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        error
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;1 -&gt; begin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">try</span><span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5168\u5C40\u76D1\u542C" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u76D1\u542C" aria-hidden="true">#</a> \u5168\u5C40\u76D1\u542C</h4><p><em><strong>\u5728\u7EBF\u4E0A\u73AF\u5883\u4E2D\uFF0C \u4E0D\u60F3\u5728\u63A7\u5236\u53F0\u6253\u5370\u9519\u8BEF\uFF0C\u8BE5\u600E\u529E\uFF1F</strong></em></p><ul><li>window.onerror</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;1 -&gt; begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      error<span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;1 -&gt; begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    window<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;on error ::&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>window.onerror \u7684\u5F0A\u7AEF\u662F\uFF1A\uFF1F\uFF1F\uFF1F</p><ul><li>error \u76D1\u542C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;1 -&gt; begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      error<span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;1 -&gt; begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token parameter">args</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>promise \u5F02\u5E38\u76D1\u542C</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">abc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;unhandledrejection&quot;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h4><table><thead><tr><th style="text-align:center;">\u5F02\u5E38\u7C7B\u578B</th><th style="text-align:center;">\u540C\u6B65\u65B9\u6CD5</th><th style="text-align:center;">\u5F02\u6B65\u65B9\u6CD5</th><th style="text-align:center;">\u8D44\u6E90\u52A0\u8F7D</th><th style="text-align:center;">promise</th><th style="text-align:center;">async/await</th></tr></thead><tbody><tr><td style="text-align:center;">try/catch</td><td style="text-align:center;">\u2714</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">onerror</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">error \u76D1\u542C</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">unhandledrejection \u76D1\u542C</td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table><h3 id="vue-\u9519\u8BEF\u76D1\u542C" tabindex="-1"><a class="header-anchor" href="#vue-\u9519\u8BEF\u76D1\u542C" aria-hidden="true">#</a> Vue \u9519\u8BEF\u76D1\u542C</h3><h3 id="react-\u9519\u8BEF\u76D1\u542C" tabindex="-1"><a class="header-anchor" href="#react-\u9519\u8BEF\u76D1\u542C" aria-hidden="true">#</a> React \u9519\u8BEF\u76D1\u542C</h3><h2 id="\u9519\u8BEF\u4E0A\u62A5" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u4E0A\u62A5" aria-hidden="true">#</a> \u9519\u8BEF\u4E0A\u62A5</h2><h3 id="\u4E0A\u62A5\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u62A5\u65B9\u5F0F" aria-hidden="true">#</a> \u4E0A\u62A5\u65B9\u5F0F</h3><h4 id="xxx" tabindex="-1"><a class="header-anchor" href="#xxx" aria-hidden="true">#</a> xxx</h4><h4 id="xxx-1" tabindex="-1"><a class="header-anchor" href="#xxx-1" aria-hidden="true">#</a> xxx</h4><h3 id="\u9519\u8BEF\u6536\u96C6-sdk" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u6536\u96C6-sdk" aria-hidden="true">#</a> \u9519\u8BEF\u6536\u96C6 sdk</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token parameter">args</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">uploadError</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

<span class="token comment">// \u4E0A\u62A5\u6570\u636E\u5E8F\u5217\u5316</span>
<span class="token keyword">function</span> <span class="token function">uploadError</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>lineno<span class="token punctuation">,</span> colno<span class="token punctuation">,</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token punctuation">{</span>stack<span class="token punctuation">}</span><span class="token punctuation">,</span> timeStamp<span class="token punctuation">,</span> message<span class="token punctuation">,</span> filename<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> info <span class="token operator">=</span> <span class="token punctuation">{</span>
    lineno<span class="token punctuation">,</span>
    colno<span class="token punctuation">,</span>
    stack<span class="token punctuation">,</span>
    timeStamp<span class="token punctuation">,</span>
    message<span class="token punctuation">,</span>
    filename
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> str <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">btoa</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> host <span class="token operator">=</span> <span class="token string">&#39;http://localhost:7001/monitor/error&#39;</span>

  <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>host<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?info=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>str<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u670D\u52A1\u7AEF\u6536\u96C6" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u7AEF\u6536\u96C6" aria-hidden="true">#</a> \u670D\u52A1\u7AEF\u6536\u96C6</h2><ol><li>\u9879\u76EE\u642D\u5EFA</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>egg-init backend --type<span class="token operator">=</span>simple

<span class="token builtin class-name">cd</span> backend

<span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u6DFB\u52A0\u9519\u8BEF\u6536\u96C6\u63A5\u53E3</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u8DEF\u7531</span>
  router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/monitor/error&#39;</span><span class="token punctuation">,</span> controller<span class="token punctuation">.</span>monitor<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA Controller</span>
<span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Controller <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;egg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Controller<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> getOriginSource <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../utils/sourcemap&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">MonitorController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> ctx <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> info <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>query
    <span class="token comment">// \u53CD\u5E8F\u5217\u5316\u6570\u636E</span>
    <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span> <span class="token string">&#39;base64&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fronterror:&#39;</span><span class="token punctuation">,</span> json<span class="token punctuation">)</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> MonitorController<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63A5\u6536\u65E5\u5FD7\u5E76\u8BB0\u5F55\u5230\u65E5\u5FD7\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u63A5\u6536\u65E5\u5FD7\u5E76\u8BB0\u5F55\u5230\u65E5\u5FD7\u4E2D" aria-hidden="true">#</a> \u63A5\u6536\u65E5\u5FD7\u5E76\u8BB0\u5F55\u5230\u65E5\u5FD7\u4E2D</h3><h4 id="\u5B9A\u5236\u65E5\u5FD7\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u5236\u65E5\u5FD7\u5904\u7406" aria-hidden="true">#</a> \u5B9A\u5236\u65E5\u5FD7\u5904\u7406</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token comment">// \u6DFB\u52A0\u914D\u7F6E</span>
  config<span class="token punctuation">.</span>customLogger <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">frontendLogger</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">file</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>appInfo<span class="token punctuation">.</span>root<span class="token punctuation">,</span> <span class="token string">&#39;logs/frontend.log&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>


  <span class="token comment">// Controller \u4E2D\u4F7F\u7528\u914D\u7F6E</span>

  <span class="token keyword">async</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> ctx <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> info <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>query
    <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span> <span class="token string">&#39;base64&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;fronterror:&#39;</span><span class="token punctuation">,</span> json<span class="token punctuation">)</span>
    <span class="token comment">// \u8BB0\u5165\u9519\u8BEF\u65E5\u5FD7</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&#39;frontendLogger&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u6B21\u5F02\u5E38\u4F1A\u5B58\u5728 log \u6587\u4EF6\u4E2D</p><h2 id="sourcemap-\u65E5\u5FD7\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#sourcemap-\u65E5\u5FD7\u5206\u6790" aria-hidden="true">#</a> sourcemap \u65E5\u5FD7\u5206\u6790</h2><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h3><ol><li>\u6BCF\u6B21\u6253\u5305\u7684\u65F6\u5019\u4E0A\u4F20\u4E00\u4EFDsourcemap \u6E90\u6587\u4EF6\u5230\u670D\u52A1\u5668</li><li>\u9879\u76EE\u8FD0\u884C\u7684\u65F6\u5019\u51FA\u9519\u7684\u65F6\u5019\u8BB2\u9519\u8BEF\u4FE1\u606F\u4F20\u7ED9\u670D\u52A1\u7AEF</li><li>\u670D\u52A1\u7AEF\u901A\u8FC7\u5F97\u5230\u7684\u53C2\u6570\uFF08\u4E3B\u8981\u662Ffilename \u53C2\u6570\u5BF9\u548C\u670D\u52A1\u7AEF\u7684source map \u8FDB\u884C\u5BF9\u6BD4\uFF0C \u7136\u540E\u89E3\u6790\u51FA\u9519\u8BEF\u7684\u539F\u4F4D\u7F6E\uFF09</li></ol><h3 id="sourcemap-\u6587\u4EF6\u4E0A\u62A5" tabindex="-1"><a class="header-anchor" href="#sourcemap-\u6587\u4EF6\u4E0A\u62A5" aria-hidden="true">#</a> sourcemap \u6587\u4EF6\u4E0A\u62A5</h3><h4 id="webpack-plugin" tabindex="-1"><a class="header-anchor" href="#webpack-plugin" aria-hidden="true">#</a> webpack plugin</h4><h5 id="\u521D\u59CB\u5316\u63D2\u4EF6\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316\u63D2\u4EF6\u89E3\u6784" aria-hidden="true">#</a> \u521D\u59CB\u5316\u63D2\u4EF6\u89E3\u6784</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">UploadSourceMapWebpackPlugin</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> options
  <span class="token punctuation">}</span>

  <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6253\u5305\u7ED3\u675F\u540E\u6267\u884C</span>
    compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>done<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&quot;upload-sourcemap-plugin&quot;</span><span class="token punctuation">,</span> <span class="token parameter">status</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;webpack runing&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> UploadSourceMapWebpackPlugin<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u6DFB\u52A0-sourcemap-\u8BFB\u53D6" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0-sourcemap-\u8BFB\u53D6" aria-hidden="true">#</a> \u6DFB\u52A0 sourcemap \u8BFB\u53D6</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;-----------------UploadSourceMapWebPackPlugin apply--------------------&#39;</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5B9A\u4E49\u5728\u6253\u5305\u540E\u6267\u884C</span>
        compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>done<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token string">&#39;upload-sourecemap-plugin&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token parameter">status</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u8BFB\u53D6sourcemap\u6587\u4EF6</span>
            <span class="token keyword">const</span> list <span class="token operator">=</span> glob<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span>compilation<span class="token punctuation">.</span>outputOptions<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./**/*.{js.map,}</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> filename <span class="token keyword">of</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>uploadUrl<span class="token punctuation">,</span> filename<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u5B9E\u73B0\u4E0A\u4F20\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4E0A\u4F20\u529F\u80FD" aria-hidden="true">#</a> \u5B9E\u73B0\u4E0A\u4F20\u529F\u80FD</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token function">upload</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;upload Map:&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span>

            <span class="token keyword">const</span> req <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>
                <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?name=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span>
                    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/octet-stream&#39;</span><span class="token punctuation">,</span>
                        <span class="token literal-property property">Connection</span><span class="token operator">:</span> <span class="token string">&#39;keep-alive&#39;</span><span class="token punctuation">,</span>
                        <span class="token string-property property">&#39;Transfer-Encoding&#39;</span><span class="token operator">:</span> <span class="token string">&#39;chunked&#39;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">)</span>
            fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">chunk</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    req<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    req<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u670D\u52A1\u7AEF\u6DFB\u52A0\u4E0A\u4F20\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u670D\u52A1\u7AEF\u6DFB\u52A0\u4E0A\u4F20\u63A5\u53E3" aria-hidden="true">#</a> \u670D\u52A1\u7AEF\u6DFB\u52A0\u4E0A\u4F20\u63A5\u53E3</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/monitor/sourcemap&#39;</span><span class="token punctuation">,</span> controller<span class="token punctuation">.</span>monitor<span class="token punctuation">.</span>upload<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> ctx <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">const</span> stream <span class="token operator">=</span> ctx<span class="token punctuation">.</span>req
    <span class="token keyword">const</span> filename <span class="token operator">=</span> ctx<span class="token punctuation">.</span>query<span class="token punctuation">.</span>name
    <span class="token comment">// \u8FD9\u91CC\u9700\u8981\u5B9A\u4E49\u57FA\u7840\u8DEF\u5F84</span>
    <span class="token keyword">const</span> dir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>baseDir<span class="token punctuation">,</span> <span class="token string">&#39;uploads&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u5224\u65ADupload\u662F\u5426\u5B58\u5728</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> target <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> filename<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;writeFile:&#39;</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span>
    <span class="token keyword">const</span> writeStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    stream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writeStream<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sourcemap-\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#sourcemap-\u89E3\u6790" aria-hidden="true">#</a> sourcemap \u89E3\u6790</h3><h4 id="\u521D\u59CB\u5316-\u53CD\u5E8F\u5217\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316-\u53CD\u5E8F\u5217\u7C7B" aria-hidden="true">#</a> \u521D\u59CB\u5316 \u53CD\u5E8F\u5217\u7C7B</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// /utils/stackparser.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">StackPaser</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">sourceMapDir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>consumers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>sourceMapDir <span class="token operator">=</span> sourceMapDir
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,55),E={id:"\u53CD\u5E8F\u5217-error-\u5BF9\u8C61-error-stack-parser",tabindex:"-1"},L=n("a",{class:"header-anchor",href:"#\u53CD\u5E8F\u5217-error-\u5BF9\u8C61-error-stack-parser","aria-hidden":"true"},"#",-1),C=s(" \u53CD\u5E8F\u5217 Error \u5BF9\u8C61 "),D={href:"https://www.npmjs.com/package/error-stack-parser",target:"_blank",rel:"noopener noreferrer"},O=s("error-stack-parser"),V=e(`<p>\u4E3A\u4E86\u524D\u7AEF\u7684\u9519\u8BEF\u7C7B\u578B\u8F6C\u6362\u4E3A stackFrame\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// /utils/stackparser.js</span>
    <span class="token function">parseStackTrack</span><span class="token punctuation">(</span><span class="token parameter">stack<span class="token punctuation">,</span> message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> error <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
        error<span class="token punctuation">.</span>stack <span class="token operator">=</span> stack
        <span class="token keyword">const</span> stackFrame <span class="token operator">=</span> ErrorStackParser<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
        <span class="token keyword">return</span> stackFrame
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token comment">// \u6D4B\u8BD5</span>
    <span class="token comment">// \u8F6C\u6362\u6E90\u7801\u4F4D\u7F6E</span>
    <span class="token keyword">const</span> stackParser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StackParser</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>baseDir<span class="token punctuation">,</span> <span class="token string">&#39;uploads&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> stackFrame <span class="token operator">=</span> stackParser<span class="token punctuation">.</span><span class="token function">parseStackTrack</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>stack<span class="token punctuation">,</span> json<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e7aa772180064ff29b2f5fb6ea29c8ce~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p>`,4),B={id:"\u5C06\u9519\u8BEF\u8F6C\u6362\u6210\u6E90\u7801\u4E2D\u7684\u4F4D\u7F6E-source-map",tabindex:"-1"},R=n("a",{class:"header-anchor",href:"#\u5C06\u9519\u8BEF\u8F6C\u6362\u6210\u6E90\u7801\u4E2D\u7684\u4F4D\u7F6E-source-map","aria-hidden":"true"},"#",-1),I=s(" \u5C06\u9519\u8BEF\u8F6C\u6362\u6210\u6E90\u7801\u4E2D\u7684\u4F4D\u7F6E "),U={href:"https://www.npmjs.com/package/source-map",target:"_blank",rel:"noopener noreferrer"},W=s("source-map"),$=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> SourceMapConsumer <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;source-map&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token function">getOriginalErrorStack</span><span class="token punctuation">(</span><span class="token parameter">stackFrame</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">const</span> origin <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token keyword">of</span> stackFrame<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        origin<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOriginPosition</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;-----------getOriginalErrorStack --------&#39;</span><span class="token punctuation">,</span> origin<span class="token punctuation">)</span>
    <span class="token keyword">return</span> origin
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token function">getOriginPosition</span><span class="token punctuation">(</span><span class="token parameter">stackFrame</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> columnNumber<span class="token punctuation">,</span> lineNumber<span class="token punctuation">,</span> fileName <span class="token punctuation">}</span> <span class="token operator">=</span> stackFrame
    fileName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;---------------\u5224\u65ADconsumer\u662F\u5426\u5B58\u5728---------&#39;</span><span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5224\u65ADconsumer\u662F\u5426\u5B58\u5728</span>
    <span class="token keyword">let</span> consumer <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>consumers<span class="token punctuation">[</span>fileName<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>consumer <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BFB\u53D6sourcemap</span>
        <span class="token keyword">const</span> sourceMapPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sourceMapDir<span class="token punctuation">,</span> fileName <span class="token operator">+</span> <span class="token string">&#39;.map&#39;</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5224\u65AD\u6587\u4EF6\u662F\u5426\u5B58\u5728</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>sourceMapPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> stackFrame
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> content <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>sourceMapPath<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;sourceMap&#39;</span><span class="token punctuation">,</span>sourceMapPath<span class="token punctuation">)</span>
        <span class="token comment">// console.log(&#39;content&#39;,content)</span>
        consumer <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">SourceMapConsumer</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>consumers<span class="token punctuation">[</span>fileName<span class="token punctuation">]</span> <span class="token operator">=</span> consumer
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> parseData <span class="token operator">=</span> consumer<span class="token punctuation">.</span><span class="token function">originalPositionFor</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">line</span><span class="token operator">:</span>lineNumber<span class="token punctuation">,</span><span class="token literal-property property">column</span><span class="token operator">:</span>columnNumber<span class="token punctuation">}</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;parseData&#39;</span><span class="token punctuation">,</span>parseData<span class="token punctuation">)</span>
    <span class="token keyword">return</span> parseData
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5C06\u6E90\u7801\u8BB0\u5F55\u5230\u65E5\u5FD7\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u5C06\u6E90\u7801\u8BB0\u5F55\u5230\u65E5\u5FD7\u4E2D" aria-hidden="true">#</a> \u5C06\u6E90\u7801\u8BB0\u5F55\u5230\u65E5\u5FD7\u4E2D</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token comment">// \u8F6C\u6362\u6E90\u7801\u4F4D\u7F6E</span>
    <span class="token keyword">const</span> stackParser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StackParser</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>baseDir<span class="token punctuation">,</span> <span class="token string">&#39;uploads&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> stackFrame <span class="token operator">=</span> stackParser<span class="token punctuation">.</span><span class="token function">parseStackTrack</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>stack<span class="token punctuation">,</span> json<span class="token punctuation">.</span>message<span class="token punctuation">)</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;-----------stackFrame------------&#39;</span><span class="token punctuation">,</span> stackFrame<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> originStack <span class="token operator">=</span> <span class="token keyword">await</span> stackParser<span class="token punctuation">.</span><span class="token function">getOriginalErrorStack</span><span class="token punctuation">(</span>stackFrame<span class="token punctuation">)</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&#39;frontendLogger&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> originStack<span class="token punctuation">)</span>

    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3-1" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3-1" aria-hidden="true">#</a> \u603B\u7ED3</h2><h2 id="todolist" tabindex="-1"><a class="header-anchor" href="#todolist" aria-hidden="true">#</a> TodoList</h2><ol><li>\u65E5\u5FD7\u6570\u636E\u5316</li><li>\u7EC6\u5316\u5F02\u5E38\u9897\u7C92</li><li>\u65E5\u5FD7\u53EF\u89C6\u5316</li><li>\u65E5\u5FD7\u5206\u6790</li><li>\u76D1\u63A7\u7CFB\u7EDF\u5B8C\u5584</li></ol>`,6);function J(z,A){const t=c("RouterLink"),o=c("ExternalLinkIcon");return l(),u("div",null,[k,d,n("nav",v,[n("ul",null,[n("li",null,[a(t,{to:"#\u9519\u8BEF\u6536\u96C6"},{default:p(()=>[m]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#js-\u5F02\u5E38"},{default:p(()=>[b]),_:1})]),n("li",null,[a(t,{to:"#vue-\u9519\u8BEF\u76D1\u542C"},{default:p(()=>[g]),_:1})]),n("li",null,[a(t,{to:"#react-\u9519\u8BEF\u76D1\u542C"},{default:p(()=>[h]),_:1})])])]),n("li",null,[a(t,{to:"#\u9519\u8BEF\u4E0A\u62A5"},{default:p(()=>[f]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u4E0A\u62A5\u65B9\u5F0F"},{default:p(()=>[y]),_:1})]),n("li",null,[a(t,{to:"#\u9519\u8BEF\u6536\u96C6-sdk"},{default:p(()=>[w]),_:1})])])]),n("li",null,[a(t,{to:"#\u670D\u52A1\u7AEF\u6536\u96C6"},{default:p(()=>[x]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u63A5\u6536\u65E5\u5FD7\u5E76\u8BB0\u5F55\u5230\u65E5\u5FD7\u4E2D"},{default:p(()=>[_]),_:1})])])]),n("li",null,[a(t,{to:"#sourcemap-\u65E5\u5FD7\u5206\u6790"},{default:p(()=>[j]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u601D\u8DEF"},{default:p(()=>[S]),_:1})]),n("li",null,[a(t,{to:"#sourcemap-\u6587\u4EF6\u4E0A\u62A5"},{default:p(()=>[q]),_:1})]),n("li",null,[a(t,{to:"#\u670D\u52A1\u7AEF\u6DFB\u52A0\u4E0A\u4F20\u63A5\u53E3"},{default:p(()=>[P]),_:1})]),n("li",null,[a(t,{to:"#sourcemap-\u89E3\u6790"},{default:p(()=>[N]),_:1})])])]),n("li",null,[a(t,{to:"#\u603B\u7ED3-1"},{default:p(()=>[M]),_:1})]),n("li",null,[a(t,{to:"#todolist"},{default:p(()=>[F]),_:1})])])]),T,n("h4",E,[L,C,n("a",D,[O,a(o)])]),V,n("h4",B,[R,I,n("a",U,[W,a(o)])]),$])}var H=i(r,[["render",J],["__file","monitor_system.html.vue"]]);export{H as default};
