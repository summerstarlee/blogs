(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{273:function(t,c,e){"use strict";e.r(c);var o=e(13),s=Object(o.a)({},(function(){var t=this,c=t._self._c;return c("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[c("h1",{attrs:{id:"前端基础建设"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#前端基础建设"}},[t._v("#")]),t._v(" 前端基础建设")]),t._v(" "),c("p",[c("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ffa9b1246e2346b6bcac52d0ffa59307~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),t._v(" "),c("div",{staticClass:"custom-block tip"},[c("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),c("p",[t._v("前端技术的进步，使其能解决更多行业、业务的问题。 前端工程师需要解决的问题也不再单单是开发页面那么简单。 为解决错综复杂的业务需求，需要清晰梳理逻辑;   团队人员合作，需要协调团队合作;  功能越来越多，需要保证应用性能;  开发周期越来越短，需要提高开发效率;  技术更新参差不穷，需要保持技能库更新......  诸多问题亟需前端开发人员在提高开发效率和应用性能方面下足工复。")])]),t._v(" "),c("p",[t._v("前端开发中对于各种开发效率问题都有对应的多种解决方案， 如团队人员的代码风格不统一就产生了各种统一代码风格的 "),c("code",[t._v("lint")]),t._v(" 方案、 "),c("code",[t._v("git commit")]),t._v(" 不规范， 就产生了 "),c("code",[t._v("git commitizen")]),t._v(" 规范、 各种 "),c("code",[t._v("npm package")]),t._v(" 的复杂依赖, "),c("code",[t._v("ES")]),t._v(" 版本不同的语法支持， 就产生了 "),c("code",[t._v("webpack")]),t._v("、"),c("code",[t._v("babel")]),t._v(" 这样的打包编译工具。在实际的开发中，前端工程化的目的就是形成一套解决各类开发效率问题的方案。")])])}),[],!1,null,null,null);c.default=s.exports}}]);